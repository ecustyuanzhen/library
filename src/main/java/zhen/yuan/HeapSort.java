package zhen.yuan;/** * @Author:zhenyuan * @Date:Created in 16:48 2018/8/12 */public class HeapSort {    public static void heapSort(int[] array) {        int length = array.length;        for (int i = 0; i < length; i++) {            heapInsert(array, i);        }        MyPrint.printArray(array,"堆有序后：");        System.out.println();        for (int i = length; i > 0; i--) {            int temp = array[0];            array[0] = array[i - 1];            array[i - 1] = temp;            heapify(array, i - 1);        }        MyPrint.printArray(array,"排序后：");    }    private static void heapInsert(int[] array, int index) {        int temp;        while (array[index] < array[(index - 1) / 2]) {            temp = array[index];            array[index] = array[(index - 1) / 2];            array[(index - 1) / 2] = temp;            index = (index - 1) / 2;        }    }    private static void heapify(int[] array, int index) {        int head = 0;        while (head * 2 + 1 < index) {            int small = (head * 2 + 2)<index&&array[(head * 2 + 1)] > array[(head * 2 + 2)] ? (head * 2 + 2) : (head * 2 + 1);            if (array[head] < array[small]) break;            int temp = array[head];            array[head] = array[small];            array[small] = temp;            head = small;        }    }}